name: Build and test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [
          ubuntu-18.04-gcc-9,
          ubuntu-18.04-clang-9,
          ubuntu-20.04-gcc-9
        ]

        include:
          - name: ubuntu-18.04-gcc-9
            os: ubuntu-18.04
            compiler: gcc
            version: "9"
          
          - name: ubuntu-18.04-clang-9
            os: ubuntu-18.04
            compiler: clang
            version: "9"

          - name: ubuntu-20.04-gcc-9
            os: ubuntu-20.04
            compiler: gcc
            version: "9"
          
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          sudo apt-get update

          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
            echo "::set-env name=CC::clang-${{ matrix.version }}"
            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          fi
          
          sudo apt-get install libsdl2-dev libpng-dev git-lfs libjpeg-turbo8-dev
          pip install meson ninja
      - name: Build project
        run: |
          meson setup build
          ninja -C build
      - name: Run tests
        run: |
          ninja -C build test
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots-${{ matrix.name}}
          path: ./screenshots
